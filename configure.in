dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.5)

dnl Some handy macros
define([THE_PACKAGE_NAME],    [mootm])
define([THE_PACKAGE_VERSION], [2.0.6-pre1])
define([THE_PACKAGE_AUTHOR],  [moocow@ling.uni-potsdam.de])

AC_INIT(THE_PACKAGE_NAME, THE_PACKAGE_VERSION, THE_PACKAGE_AUTHOR)

dnl source && aux dir
AC_CONFIG_AUX_DIR(config)

dnl canonical target (sets $target, $target_(cpu|vendor|os) : used for bindist)
AC_CANONICAL_TARGET

dnl use automake
AM_INIT_AUTOMAKE(THE_PACKAGE_NAME, THE_PACKAGE_VERSION)

dnl use autoheader
AM_CONFIG_HEADER([src/libmootm/mootmConfig.h])

dnl default prefix
AC_PREFIX_DEFAULT(/usr/local)

#-------------------------------------------------------------
# save user's *FLAGS
#USER_LIBS="$LIBS"
#USER_LDFLAGS="$LDFLAGS"
#USER_CPPFLAGS="$CPPFLAGS"
USER_CXXFLAGS="$CXXFLAGS"

dnl
dnl check for programs
dnl
AC_PROG_CC
AC_PROG_CXX
AC_LANG(C++)

dnl v--- needed if Makefile.am uses _LTLIBRARIES targets
AC_PROG_LIBTOOL

dnl v--- for static-only libraries (non-libtool)
dnl AC_PROG_RANLIB

dnl v--- needed if Makefile.am uses lex sources
dnl AM_PROG_LEX


### --- unmangle user's CXXFLAGS
if test "$CXXFLAGS" != "$USER_CXXFLAGS" ; then
  # autoconf likes to set this... who knows why...
  AC_MSG_NOTICE([Restoring user's original CXXFLAGS value])
  CXXFLAGS="$USER_CXXFLAGS"
fi

#---------------------------------------------------------------
# short package includes
spkgincludedir="\${includedir}/AC_PACKAGE_NAME"
AC_SUBST(spkgincludedir)
# short package includes
#---------------------------------------------------------------

#---------------------------------------------------------------
# get real prefix
AC_CACHE_CHECK([for installation prefix], [ac_cv_install_prefix],
	[if test "$prefix" = "NONE" ; then
	   ac_cv_install_prefix="/usr/local"
	 else
           ac_cv_install_prefix="$prefix"
	 fi
	])
dnl #  ... and add it to our flags
dnl CPPFLAGS="$CPPFLAGS -I${ac_cv_install_prefix}/include"
dnl LDFLAGS="$LDFLAGS -L${ac_cv_install_prefix}/lib"


dnl check for strdup
AC_CHECK_FUNC(strdup,[AC_DEFINE(HAVE_STRDUP,1,[Define this if you have the strdup() function])])


dnl ---------------------------------------------------------------
dnl pkg-config : program
dnl
AC_ARG_VAR(PKG_CONFIG, [How to run the pkg-config program])
AC_ARG_VAR(PKG_CONFIG_PATH, [Directories to search for pkg-config])
if test -z "$PKG_CONFIG" ; then
  AC_PATH_PROG(PKG_CONFIG,pkg-config,[])
fi
dnl pkg-config: destination directory
AC_ARG_WITH(pkgconfig-dir,
	AC_HELP_STRING([--with-pkgconfig-dir=DIR],
		[install pkg-config metafile(s) in DIR (default=LIBDIR/pkgconfig)]),
	[ac_cv_pkgconfigdir="$withval"])
if test -z "$ac_cv_pkgconfigdir" ; then
  ac_cv_pkgconfigdir="\$(libdir)/pkgconfig"
fi
pkgconfigdir="$ac_cv_pkgconfigdir"
AC_SUBST(pkgconfigdir)
dnl
dnl pkg-config
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



dnl vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
dnl check for time headers (argh)
AC_CHECK_HEADERS([time.h sys/time.h],
	[],
	[AC_MSG_WARN([Required header file not found!])
    	 AC_MSG_WARN([Are the 'struct timeval' and 'time()' headers in your 'CPPFLAGS' environment variable?])
    	 AC_MSG_ERROR([Required headers not found -- aborting.])
	])
dnl time headers
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



dnl ------------------------------------------------------------
dnl libs: all static?
dnl

 AC_ARG_ENABLE([all-static],
 	AC_HELP_STRING([--enable-all-static],
	               [Build standalone static binary]),
	[ac_cv_enable_all_static="$enableval"],[ac_cv_enable_all_static="no"])

 if test "$ac_cv_enable_all_static" = "yes" ; then
   LDFLAGS="-all-static $LDFLAGS"
 fi

dnl libs: static?
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


dnl ------------------------------------------------------------
dnl Which FSM lib? : ac_cv_fsm_which = "gfsm" | "potsdam" | "rwth"(broken)

ac_cv_fsm_try="gfsm,potsdam,rwth"
ac_cv_fsm_which=""


AC_ARG_WITH([fsm],
	AC_HELP_STRING([--with-fsm=WHICH...],
		       [Specify comma-separated search order for underlying finite-state library.
		        Known values: "gfsm", "potsdam", "rwth".
			Default="gfsm,potsdam,rwth"
			]),
	[ac_cv_fsm_try="$withval"],
	[ac_cv_fsm_try="potsdam,gfsm,rwth"])

AC_ARG_WITH([rwth-fsa-dir],
	AC_HELP_STRING([--with-rwth-fsa-dir=DIR],
	               [Use RWTH Fsa library from DIR (default=search)]),
        [ac_cv_rwth_fsa_dir="$withval"]
	[ac_cv_rwth_fsa_dir=""])


fsm_which_libs="`echo $ac_cv_fsm_try | sed 's/\,/ /g'`"
for fsm_lib in $fsm_which_libs ; do
  case "$fsm_lib" in

    potsdam)
      PKG_CHECK_MODULES(FSMLIB, libFSM >= 0.9.0.1, [HAVE_FSMLIB="yes"], [HAVE_FSMLIB=""])
      if test "$HAVE_FSMLIB" = "yes" ; then
        ac_cv_fsm_which="potsdam"
	break
      fi
      ;;

    gfsm)
      PKG_CHECK_MODULES(GFSM, gfsm >= 0.0.8, [HAVE_GFSM="yes"], [HAVE_GFSM=""])
      if test "$HAVE_GFSM" = "yes" ; then
        ac_cv_fsm_which="gfsm"
	break
      fi
      ;;

    rwth)
      AC_MSG_CHECKING([For RWTH Fsa sources])
      if test -z "$ac_cv_rwth_fsa_dir"; then
        for bd in .. /usr/lib /usr/local/lib /usr/src /usr/local/src ; do
          for rwth_dir in $bd/fsa-* ; do
            if test -e "$rwth_dir/src/Fsa/Alphabet.cc" ; then
              ac_cv_rwth_fsa_dir="$rwth_dir"
              break
            fi
          done
          if test -n "$ac_cv_rwth_fsa_dir" ; then
	    break
          fi
        done
      fi ##-- test -z "$ac_cv_rwth_fsa_dir"

      if test -n "$ac_cv_rwth_fsa_dir" ; then
        AC_MSG_RESULT([found: \`$ac_cv_rwth_fsa_dir'])
	ac_cv_fsm_which="rwth"
	break;
      else
        AC_MSG_RESULT([not found])
      fi ##-- test -z "$ac_cv_rwth_fsa_dir"
      ;;

    *)
      AC_MSG_WARN([Unknown finite-state library "$fsm_lib" -- skipping.])
      continue
      ;;

  esac
done ##-- for fsm_lib in $fsm_which_libs


AC_MSG_CHECKING([which underlying finite-state library to use])

if test -z "$ac_cv_fsm_which" ; then
    AC_MSG_RESULT([none found])
    AC_MSG_WARN()
    AC_MSG_WARN([----------------------------------------------------------])
    AC_MSG_WARN([     Cannot find any underlying finite-state library!])
    AC_MSG_WARN()
    AC_MSG_WARN([        + Is your PKG_CONFIG_PATH set correctly ?])
    AC_MSG_WARN([        + Did you specify --with-rwth-fsa-dir=DIR ?])
    AC_MSG_WARN([----------------------------------------------------------])
    AC_MSG_WARN()
    AC_MSG_ERROR([Required package not found -- aborting.])
fi


case "$ac_cv_fsm_which" in

 potsdam)
   AC_MSG_RESULT([Potsdam libFSM])
   AC_DEFINE([USE_FSM_POTSDAM],1,
	     [Define this to use the Potsdam libFSM library])
   AC_DEFINE([MOOTM_FSM_LIBRARY],["Potsdam libFSM"],
	     [Human-readable name of the underlying finite-state library])
   ;;

 gfsm)
   AC_MSG_RESULT([GNU libgfsm])
   AC_DEFINE([USE_FSM_GFSM],1,
	     [Define this to use the GNU libgfsm library])
   AC_DEFINE([MOOTM_FSM_LIBRARY],["GNU libgfsm"],
	     [Human-readable name of the underlying finite-state library])
   ;;

 rwth)
   AC_MSG_RESULT([RWTH libFsa])

   AC_MSG_WARN()
   AC_MSG_WARN([----------------------------------------------------------])
   AC_MSG_WARN([        RWTH libFsa support is currently broken!])
   AC_MSG_WARN([----------------------------------------------------------])
   AC_MSG_WARN()

   AC_DEFINE([USE_FSM_RWTH],1,
	     [Define this to use the RWTH libFsa library])
   AC_DEFINE([MOOTM_FSM_LIBRARY],["RWTH libFsa"],
	     [Human-readable name of the underlying finite-state library])
   ;;

 *)
   AC_MSG_ERROR([Unknown finite-state library type "$ac_cv_fsm_which"])
   ;;

esac

dnl Which FSM lib?
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

dnl ------------------------------------------------------------
dnl FSM: Potsdam libFSM
dnl
if test "$ac_cv_fsm_which" = "potsdam" ; then

 CPPFLAGS="$CPPFLAGS `$PKG_CONFIG --cflags-only-I libFSM`"
 LDFLAGS="$LDFLAGS `$PKG_CONFIG --libs-only-L libFSM`"
 FSM_LIBS="`$PKG_CONFIG --libs-only-l libFSM` $LIBS"

 if test "$ac_cv_enable_all_static" = "yes" ; then
   FSM_LDADD_STATIC="-lFSMStaticHack"
 fi

fi ##-- test "$ac_cv_fsm_which" = "potsdam"

dnl FSM: Potsdam libFSM
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

dnl ------------------------------------------------------------
dnl FSM: GNU gfsm

if test "$ac_cv_fsm_which" = "gfsm" ; then

 CPPFLAGS="$CPPFLAGS `$PKG_CONFIG --cflags-only-I gfsm`"
 LDFLAGS="$LDFLAGS `$PKG_CONFIG --libs-only-L gfsm`"
 FSM_LIBS="`$PKG_CONFIG --libs-only-l gfsm` $LIBS"

fi ##-- test "$ac_cv_fsm_which" = "potsdam"

dnl FSM: GNU gfsm
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



dnl ------------------------------------------------------------
dnl FSM: RWTH libfsa
dnl

if test "$ac_cv_fsm_which" = "rwth" ; then

 RWTH_FSA_DIR="`(cd $ac_cv_rwth_fsa_dir ; pwd)`"
 RWTH_FSA_CONFIG="`make -C $RWTH_FSA_DIR config`"

 [RWTH_ARCH="`\
  echo \"$RWTH_FSA_CONFIG\" \
  | grep '^Processor:' \
  | perl -pe 's/^[^:]*:\s+//' \
  `"]

 [RWTH_OS="`\
  echo \"$RWTH_FSA_CONFIG\" \
  | grep '^Operating system:' \
  | perl -pe 's/^[^:]*:\s+//' \
  `"]

 [RWTH_VERSION_FULL="`\
  echo \"$RWTH_FSA_CONFIG\" \
  | grep '^Version:' \
  | perl -pe 's/^[^:]*:\s+//' \
  `"]
 [RWTH_VERSION=`echo "$RWTH_VERSION_FULL" | perl -pe 's/\s+-\s+.*$//'`]
 [RWTH_CVERSION=`echo "$RWTH_VERSION_FULL" | perl -pe 's/^.*\s+-\s+//'`]

 [RWTH_CPPFLAGS="`\
  echo \"$RWTH_FSA_CONFIG\" \
  | grep '^Preprocessor flags:' \
  | perl -p -e 's/^[^:]*:\s*//;' -e \"s|-I\.|-I$RWTH_FSA_DIR|g;\" \
  `"]

 [RWTH_CFLAGS="`\
  echo \"$RWTH_FSA_CONFIG\" \
  | grep '^C compiler flags:' \
  | perl -p -e 's/^[^:]*:\s+//;' -e \"s|-I\.|-I$RWTH_FSA_DIR|g;\" \
  `"]

 [RWTH_CXXFLAGS="`\
  echo \"$RWTH_FSA_CONFIG\" \
  | grep '^C\+\+ compiler flags:' \
  | perl -p -e 's/^[^:]*:\s+//;' -e \"s|-I\.|-I$RWTH_FSA_DIR|g;\" \
  `"]

 [RWTH_LDFLAGS_FULL="`\
  echo \"$RWTH_FSA_CONFIG\" \
  | grep '^Linker flags:' \
  | perl -p -e 's/^[^:]*:\s+//;' -e \"s|-L\.|-L$RWTH_FSA_DIR|g;\" \
  `"]

 RWTH_LDFLAGS=""
 RWTH_LIBS=""
 for f in $RWTH_LDFLAGS_FULL ; do
   case "$f" in
    -l*)
      RWTH_LIBS="$RWTH_LIBS $f"
      ;;
    -L*)
      RWTH_LDFLAGS="$RWTH_LDFLAGS $f"
      ;;
    *)
      ##-- ignore 'em (-rdynamic)
      ;;
   esac
 done

 [CPPFLAGS="$CPPFLAGS $RWTH_CPPFLAGS"]
 [LDFLAGS="$LDFLAGS $RWTH_LDFLAGS"]

 RWTH_OBJS="\
  $RWTH_FSA_DIR/src/Fsa/libSprintFsa.$RWTH_OS-$RWTH_ARCH-$RWTH_CVERSION.a \
  $RWTH_FSA_DIR/src/Core/libSprintCore.$RWTH_OS-$RWTH_ARCH-$RWTH_CVERSION.a \
  "

 FSM_LIBS="$FSM_LIBS $RWTH_LIBS"
 FSM_LDADD_STATIC="$RWTH_OBJS"

fi ##-- ac_cv_fsm_which = "rwth"

dnl FSM: RWTH libFsa
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^



dnl ------------------------------------------------------------
dnl FSM: vars (generic)

AC_SUBST(FSM_LIBS)
AC_SUBST(FSM_LDADD_STATIC)

dnl FSM: vars (generic)
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


dnl vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
dnl libmoot
PKG_CHECK_MODULES(MOOT, moot >= 2.0.0,
	[PC_HAVE_MOOT="yes"],
	[PC_HAVE_MOOT=""])
  
if test -n "$PC_HAVE_MOOT" ; then
    CPPFLAGS="$CPPFLAGS `$PKG_CONFIG --cflags-only-I moot`"
    CXXFLAGS="$CXXFLAGS `$PKG_CONFIG --cflags-only-other moot`"
    LDFLAGS="$LDFLAGS `$PKG_CONFIG --libs-only-L moot`"
    LIBS="$LIBS `$PKG_CONFIG --libs-only-l moot`"
else
    AC_MSG_WARN()
    AC_MSG_WARN([----------------------------------------------------------])
    AC_MSG_WARN([             Cannot find moot >= 2.0.0!])
    AC_MSG_WARN()
    AC_MSG_WARN([        Is your PKG_CONFIG_PATH set correctly?])
    AC_MSG_WARN([----------------------------------------------------------])
    AC_MSG_WARN()
    AC_MSG_ERROR([Required package not found -- aborting.])

fi ## test -n "$PC_HAVE_MOOT"

dnl moot
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


dnl ------------------------------------------------------------
dnl check for optgen.perl
dnl
AC_ARG_VAR(OPTGEN_PERL, [Path to the 'optgen.perl' script.])
AC_ARG_WITH([optgen-perl],
	AC_HELP_STRING([--with-optgen-perl=PATH],
		       [Specify location of optgen.perl]),
	[OPTGEN_PERL="$withval"])

if test -z "$OPTGEN_PERL" ; then
  AC_PATH_PROG(OPTGEN_PERL,[optgen.perl],[])
  if test -z "$OPTGEN_PERL" ; then
    AC_MSG_RESULT([not found])
    AC_MSG_WARN([])
    AC_MSG_WARN([cannot find optgen.perl program -- CVS builds will fail!])
    AC_MSG_WARN([])
  fi
fi
AC_SUBST(OPTGEN_PERL)



dnl ------------------------------------------------------------
dnl documentation
dnl
AC_ARG_WITH(docdir,
	AC_HELP_STRING([--with-docdir=DIR],
		[install documentation in DIR/AC_PACKAGE_NAME (default=DATADIR/doc)]),
	[docdir="$withval"],
	[docdir="\${datadir}/doc"])
pkgdocdir="\${docdir}/\${PACKAGE}"
pkgdocprogdir="\${docdir}/\${PACKAGE}/programs"

AC_SUBST(docdir)
AC_SUBST(pkgdocdir)
AC_SUBST(pkgdocprogdir)

AC_ARG_WITH(doc-formats,
	AC_HELP_STRING([--with-doc-formats=LIST],
		       [Build documentation formats in LIST. \
                        Available formats: txt, man, html, dvi, ps, pdf, none.
	                Default='man html']),
	[ac_cv_doc_formats="$withval"])

## -- set default doc formats if unspecified
if test -z "$ac_cv_doc_formats" ; then
  ac_cv_doc_formats="man html"
fi

## -- un-comma-tize the doc-formats
mootm_doc_formats=`echo "$ac_cv_doc_formats" | sed 's/\,/ /g'`


AC_ARG_ENABLE(doc,
	AC_HELP_STRING([--enable-doc],[Synonym for --with-doc-formats=none]),
	[enable_doc="$enableval"],[enable_doc="yes"])


AC_MSG_CHECKING([which documentation formats to build])
if test "$enable_doc" != "yes" ; then
 ### disable all docs
 mootm_doc_formats="none"
fi
AC_MSG_RESULT($mootm_doc_formats)
#echo ">> post RESULT"


if test "$mootm_doc_formats" != "none" ; then
  ### docs: prog doxygen
  AC_PATH_PROG(DOXYGEN,doxygen,[])
  AC_SUBST(DOXYGEN)
  AC_SUBST(DOXYGEN_SOURCES)

  ### -- report doxygen-check results
  if test -z "$DOXYGEN" ; then
    AC_MSG_WARN([doxygen not found: library documentation will not be built!]) 
  fi

  ### docs: pod converters
  AC_PATH_PROG(POD2TEXT,pod2text,[])
  AC_PATH_PROG(POD2MAN,pod2man,[])
  AC_PATH_PROG(POD2HTML,pod2html,[])
  AC_PATH_PROG(POD2LATEX,pod2latex,[])
  AC_SUBST(POD2TEXT)
  AC_SUBST(POD2MAN)
  AC_SUBST(POD2HTML)
  AC_SUBST(POD2LATEX)

  ### -- docs: .gog file linkup
  #mootm_program_gogs="moot.gog mootpp.gog moot-fstgen.gog moot-pargen.gog"
  #mootm_program_gogs="mootpp.gog mootrain.gog moothmm.gog mootm.gog moot.gog"
  mootm_program_gogs="mootm.gog"
  for g in $mootm_program_gogs ; do
    AC_CONFIG_LINKS(doc/programs/${g}:src/programs/${g})  
  done
  AC_SUBST(mootm_program_gogs)
  AC_CONFIG_LINKS(doc/programs/acknowledge.pod:src/programs/acknowledge.pod)

  ### -- initialize defaults
  DOC_SUBDIRS=""
  DOC_LATEX_TARGETS=""
  DOXY_WANT_HTML="NO"
  DOXY_WANT_MAN="NO"
  DOXY_WANT_LATEX="NO"

  for fmt in $mootm_doc_formats ; do
    case "$fmt" in

      txt)
	if test -n "$POD2TEXT" ; then
	  DOC_PROG_TXT_TARGETS=`echo "$mootm_program_gogs" | sed 's/\.gog/\.txt/g'`
	else
	  AC_MSG_WARN(pod2text not found -- program text docs will not be built!)
	fi
	;;

      man)
	if test -n "$DOXYGEN" ; then
	  DOXY_WANT_MAN="YES"
          DOC_MANDIRS="man/man3"
          DOC_MAN3_MANS="man/man3/*"
	fi
	if test -n "$POD2MAN" ; then
	  DOC_PROG_MAN_TARGETS=`echo "$mootm_program_gogs" | sed 's/\.gog/\.1/g'`
	else
	  AC_MSG_WARN(pod2man not found -- program manpages will not be built!)
	fi
	;;

      html)
	if test -n "$DOXYGEN" ; then
          DOXY_WANT_HTML="YES"
          DOC_SUBDIRS="$DOC_SUBDIRS html"
	fi
	if test -n "$POD2HTML" ; then
	  DOC_PROG_HTML_TARGETS="mootprogs.css `echo "$mootm_program_gogs" | sed 's/\.gog/\.html/g'`"
	else
	  AC_MSG_WARN(pod2html not found -- program html docs will not be built!)
	fi
	;;

      dvi)
	if test -n "$DOXYGEN" ; then
	  DOXY_WANT_LATEX="YES"
	  DOC_LATEX_TARGETS="${DOC_LATEX_TARGETS} refman.dvi"
	fi
	if test -n "$POD2LATEX" ; then
	  DOC_PROG_DVI_TARGETS=`echo "$mootm_program_gogs" | sed 's/\.gog/\.dvi/g'`
	else
	  AC_MSG_WARN(pod2latex not found -- program dvi docs will not be built!)
	fi
	;;

      ps)
	if test -n "$DOXYGEN" ; then
	  DOXY_WANT_LATEX="YES"
	  DOC_LATEX_TARGETS="${DOC_LATEX_TARGETS} refman.ps"
	fi
	if test -n "$POD2LATEX" ; then
	  DOC_PROG_PS_TARGETS=`echo "$mootm_program_gogs" | sed 's/\.gog/\.ps/g'`
	else
	  AC_MSG_WARN(pod2latex not found -- program postscript docs will not be built!)
	fi
	;;

      pdf)
	if test -n "$DOXYGEN" ; then
	  DOXY_WANT_LATEX="YES"
    	  DOC_LATEX_TARGETS="${DOC_LATEX_TARGETS} refman.pdf"
	fi
	if test -n "$POD2LATEX" ; then
	  DOC_PROG_PDF_TARGETS=`echo "$mootm_program_gogs" | sed 's/\.gog/\.pdf/g'`
	else
	  AC_MSG_WARN(pod2latex not found -- program pdf docs will not be built!)
	fi
	;;

      *)
	AC_MSG_WARN(ignoring unknown documentation format: $fmt)
	;;
    esac; # case "$fmt" in ...
  done; # for fmt in $mootm_doc_formats ...

  AC_SUBST(DOXY_WANT_HTML)
  AC_SUBST(DOXY_WANT_MAN)
  AC_SUBST(DOXY_WANT_LATEX)
  AC_SUBST(DOC_SUBDIRS)
  AC_SUBST(DOC_MANDIRS)
  AC_SUBST(DOC_MAN3_MANS)
  AC_SUBST(DOC_LATEX_TARGETS)
  AC_SUBST(POD_DOC_SUFFIXES)

  AC_SUBST(DOC_PROG_TXT_TARGETS)
  AC_SUBST(DOC_PROG_MAN_TARGETS)
  AC_SUBST(DOC_PROG_HTML_TARGETS)
  AC_SUBST(DOC_PROG_DVI_TARGETS)
  AC_SUBST(DOC_PROG_PS_TARGETS)
  AC_SUBST(DOC_PROG_PDF_TARGETS)


  # -- check for tag-files (this needs an overhaul!)
  for ext in moot libFSM ; do
    extdocdir="`$PKG_CONFIG --variable=pkgdocdir ${ext}`"
    if test -n "$extdocdir" -a "$extdocdir" != "no" ; then
      exttagfiles="`find $extdocdir -name '*.tag'`"
      for exttag in $exttagfiles ; do
        exttagdir="`dirname $exttag`/html"
        if test -d "$exttagdir" ; then
          DOXY_TAGFILES="$DOXY_TAGFILES $exttag=$exttagdir"
        fi
      done
    fi
  done 
  AC_SUBST(DOXY_TAGFILES)   
fi; # if "$mootm_doc_formats" != "none" ...


#---------------------------------------------------------------
# Binary distribution
BINDIST_RELEASE=1

## -- hack: canonicalize package-name to lower-case (for debian)
BINDIST_PKGNAME=`echo "$PACKAGE" | tr '[[:upper:]]' '[[:lower:]]'`

## -- hack: downgrade ix86 -> i386
case "$target_cpu" in
  i[[3-9]]86)
	BINDIST_CPU=i386
	;;
  *)
	BINDIST_CPU="$target_cpu"
	;;
esac
BINDIST_OS="$target_os"

AC_SUBST(BINDIST_PKGNAME)
AC_SUBST(BINDIST_RELEASE)
AC_SUBST(BINDIST_CPU)
AC_SUBST(BINDIST_OS)
# Binary distribution
#---------------------------------------------------------------

dnl ------------------------------------------------------------
dnl debug ?
dnl
AC_MSG_CHECKING([whether to build debug version])
AC_ARG_ENABLE(debug,
	AC_HELP_STRING([--enable-debug],[build debug version (default=no)]))

if test "$enable_debug" == "yes" ; then
   AC_MSG_RESULT(yes)
   mootm_OFLAGS="-g"
else
  AC_MSG_RESULT(no)
  #mootm_OFLAGS="-O2"
  #mootm_OFLAGS="-O3 -fomit-frame-pointer -funroll-loops -finline-limit-100000"
  mootm_OFLAGS="-O3 -fomit-frame-pointer -funroll-loops"
fi
AC_SUBST(mootm_OFLAGS)


dnl ---------------------------------------------------------------
dnl cxxflags: template depth (should be handled by moot)
dnl
dnl CXXFLAGS="$CXXFLAGS -ftemplate-depth-24"
dnl
dnl cxxflags: template depth
dnl ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

dnl ------------------------------------------------------------
dnl unconfig
AC_CONFIG_LINKS(src/libmootm/mootmUnConfig.h:src/libmootm/mootmConfig.h.in)


dnl ------------------------------------------------------------
dnl warnings ?
dnl
AC_MSG_CHECKING([whether to display compiler warnings])
AC_ARG_ENABLE(warnings,
	AC_HELP_STRING([--disable-warnings],[disable compiler warnings (default=no)]))

if test "$enable_warnings" != "no" ; then
   AC_MSG_RESULT(yes)
   mootm_WFLAGS="-Wall"
else
  AC_MSG_RESULT(no)
  mootm_WFLAGS=""
fi
AC_SUBST(mootm_WFLAGS)


dnl
dnl output
dnl
AC_CONFIG_FILES(src/libmootm/Makefile src/programs/Makefile src/Makefile)
AC_CONFIG_FILES(doc/libmootm/mainpage.dox)
AC_CONFIG_FILES(doc/libmootm/libmootm.doxy doc/libmootm/Makefile)
AC_CONFIG_FILES(doc/programs/Makefile)
AC_CONFIG_FILES(doc/Makefile)
AC_CONFIG_FILES(config/Makefile)
AC_CONFIG_FILES(Makefile)
AC_CONFIG_FILES(mootm.pc)
AC_CONFIG_FILES(mootm.spec)
AC_OUTPUT
