/* -*- Mode: C++ -*- */
/** 
\mainpage libmootm: moocow's PoS tagging library: morphology

\author Bryan Jurish <moocow@ling.uni-potsdam.de>

\version @PACKAGE_VERSION@



\section Intro Introduction

libmootm is a C++ library for morphological analysis using
Thomas Hanneforth's libFSM library.

\section Morph Morphological Analysis

The \link mootm::mootMorph mootMorph\endlink
class is designed to be a wrapper for a user-defined
finite-state morphological analyzer using Thomas Hanneforth's libFSM
library.  You must provide the FSMSymSpec object to use for lookup
as well as an FSM object representing the analyzer itself.  Additionally,
you may specify a tag-extraction transducer (yet another FSM) which
maps morphological output paths to PoS tags.

\see \link moot::mootMorph mootMorph\endlink
\see <A HREF="../../programs/mootm.html">mootm(1)</A>



\section Ack Acknowledgements

Development of this package was supported by the project
<A HREF="http://www.bbaw.de/forschung/kollokationen">Kollokationen im Wörterbuch</A>
("collocations in the dictionary")
in association with the project
<A HREF="http://www.dwds.de">Digitales Wörterbuch der deutschen Sprache des 20. Jahrhunderts(DWDS)</A>
("digital dictionary of the German language")
at the
<A HREF="http://www.bbaw.de">Berlin-Brandenburgische Akademie der Wissenschaften</A>
with funding from the
<A HREF="http://www.avh.org">Alexander von Humboldt Stiftung</A>
and from the
Zukunftsinvestitionsprogramm of the German federal government.

I am grateful to Christiane Fellbaum, Alexander Geyken,
Gerald Neumann, Edmund Pohl, Alexey Sokirko, and others
for offering useful insights in the course of development
of this package.

Thomas Hanneforth wrote and maintains the libFSM C++ library
used by this package.

Alexander Geyken and Thomas Hanneforth developed the
rule-based morphological analysis system for German
which was used in the development and testing of this
package.


\section SeeAlso More Information

\see FSM
\see <A HREF="../../programs/mootm.html">mootm(1)</A>
moot(1)

\todo Get tag-extraction back.

*/
